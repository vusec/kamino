begin library "kaminolib"
   sort = true
   dirname = "src"
   has_byte = false
   files = [
       "options.ml"
       "bb_cluster.ml"
       "bb_cluster.mli"
       "misc.mli"
       "misc.ml"
       "bb.ml"
       "bb.mli"
       "transfer_function.ml"
       "transfer_function.mli"
       "ssa_ext_visitor.ml"
       "ssa_ext.ml"
       "ssa_ext.mli"
       "var_convenience.ml"
       "print.ml"
       "ssa_ext_convenience.ml"
       "karch.ml"
       "hashtbl_convenience.ml"
       "callinfo.mli"
       "callinfo.ml"
       "ktype.ml"
       "ktype.mli"
       "interval.ml"
       "address_ranges.ml"
       "memo.mli"
       "memo.ml"
       "measure.ml"
       "summary.mli"
       "summary.ml"
       "callgraph.ml"
       "callgraph.mli"
       "cmpres.ml"  (syntax = "syntax-for-sexplib")
       "cmpres.mli"
       "comparator.mli"
       "comparator.ml"
       "stmt_context.ml"
       "assumptions.mli"
       "assumptions.ml"
       "visibility.mli"
       "visibility.ml"
       "pfc.mli"
       "pfc.ml"
       "cfg_convenience.mli"
       "cfg_convenience.ml"
       "coalesce.ml"
       "analysis_helpers.ml"
       "crappy_vsa.ml"
       "memory_region_analysis.ml"
       "load_store_analysis.ml"
       "analysis_pass.ml"
       "analysis_pass.mli"
       "ssa_ext_cmp.mli"
       "ssa_ext_cmp.ml"
       "ssa_ext_eval.ml"
       "side_effect.ml"
       "function.ml"
       "ast_convenience_ext.ml"
       "plt.ml"
       "graph_dump.ml"
       "imtree.ml"
       "symbols.ml"
       "stats.ml"
       "stats.mli"
       "fixpoint.ml"
       "func_attr.ml"
       "validation.ml"
       "perfacc.ml"
       "embarassingly_parallel.ml"
       "embarassingly_parallel.mli"
       "outdir.mli"
       "outdir.ml"
       "memrange.ml"
       "function_info.ml"
       "function_info.mli"
       "calls.mli"
       "calls.ml"
       "ForkWorkHelpers.ml"
       "ForkWork.mli"
       "ForkWork.ml"
       "batch.ml" (syntax = "syntax-for-sexplib")
       "mock.mli"
       "mock.ml"
       "open_cfg_ast.ml"
       "big_int_convenience_ext.ml"
       "input.ml" (syntax = "syntax-for-sexplib")
       "input.mli"
       "johnson.ml"
       "hvsa.ml"
       "rewrite.ml"
       "tf_norm.ml"
       "pointerness.ml"
       "track_exp_bits.ml"
   ]
   requires = ["sexplib" "bap" "fileutils" "batteries"
               "easy-format" "syntax-for-sexplib"]
end
